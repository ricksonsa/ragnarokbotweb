// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RagnarokBotWeb.Infrastructure.Configuration;

#nullable disable

namespace RagnarokBotWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250308030609_AmmoCountPackage")]
    partial class AmmoCountPackage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Block", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BlockDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntityType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Bot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastInteracted")
                        .HasColumnType("TEXT");

                    b.Property<long>("ScumServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScumServerId");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Bunker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Available")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bunkers");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Button", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("Buttons");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ButtonTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChannelTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Public")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChannelTemplateId");

                    b.ToTable("ButtonTemplates");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Channel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChannelType")
                        .IsUnique();

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.HasIndex("GuildId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ChannelTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Admin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChannelType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelType")
                        .IsUnique();

                    b.ToTable("ChannelTemplates");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Command", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BotId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExecuteDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Executed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Ftp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Provider")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RootFolder")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ftps");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Guild", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RunTemplate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Kill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Distance")
                        .HasColumnType("REAL");

                    b.Property<long?>("KillerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KillerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("KillerSteamId64")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sector")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TargetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetSteamId64")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KillerId");

                    b.HasIndex("TargetId");

                    b.ToTable("Kills");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Lockpick", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AttemptDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Attempts")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LockType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ScumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SteamId64")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lockpicks");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PackId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ScumServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PackId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ScumServerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Pack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Commands")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscordChannelId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBlockPurchaseRaidTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVipOnly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PurchaseCooldownSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ScumServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("StockPerPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("VipPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ScumServerId");

                    b.ToTable("Packs");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.PackItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmmoCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PackId");

                    b.ToTable("PackItems");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Coin")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Fame")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScumId")
                        .HasColumnType("TEXT");

                    b.Property<long>("ScumServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SteamId64")
                        .HasColumnType("TEXT");

                    b.Property<string>("SteamName")
                        .HasColumnType("TEXT");

                    b.Property<float?>("X")
                        .HasColumnType("REAL");

                    b.Property<float?>("Y")
                        .HasColumnType("REAL");

                    b.Property<float?>("Z")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ScumServerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.PlayerRegister", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ScumServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WelcomePackId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ScumServerId");

                    b.ToTable("PlayerRegisters");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Reader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ScheduledTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CronExpression")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ScumServerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScumServerId");

                    b.ToTable("ScheduledTasks");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ScumServer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("FtpId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RestartTimes")
                        .HasColumnType("TEXT");

                    b.Property<long>("TenantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FtpId");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("ScumServers");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<long>("TenantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Bot", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.ScumServer", "ScumServer")
                        .WithMany()
                        .HasForeignKey("ScumServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScumServer");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Button", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Channel", "Channel")
                        .WithMany("Buttons")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ButtonTemplate", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.ChannelTemplate", "ChannelTemplate")
                        .WithMany("Buttons")
                        .HasForeignKey("ChannelTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelTemplate");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Channel", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Command", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Bot", "Bot")
                        .WithMany()
                        .HasForeignKey("BotId");

                    b.Navigation("Bot");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Kill", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Player", "Killer")
                        .WithMany()
                        .HasForeignKey("KillerId");

                    b.HasOne("RagnarokBotWeb.Domain.Entities.Player", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId");

                    b.Navigation("Killer");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Lockpick", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Order", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Pack", "Pack")
                        .WithMany()
                        .HasForeignKey("PackId");

                    b.HasOne("RagnarokBotWeb.Domain.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.HasOne("RagnarokBotWeb.Domain.Entities.ScumServer", "ScumServer")
                        .WithMany()
                        .HasForeignKey("ScumServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pack");

                    b.Navigation("Player");

                    b.Navigation("ScumServer");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Pack", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.ScumServer", "ScumServer")
                        .WithMany()
                        .HasForeignKey("ScumServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScumServer");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.PackItem", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RagnarokBotWeb.Domain.Entities.Pack", "Pack")
                        .WithMany("PackItems")
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Pack");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Player", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.ScumServer", "ScumServer")
                        .WithMany()
                        .HasForeignKey("ScumServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScumServer");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.PlayerRegister", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.ScumServer", "ScumServer")
                        .WithMany()
                        .HasForeignKey("ScumServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScumServer");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ScheduledTask", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.ScumServer", "ScumServer")
                        .WithMany()
                        .HasForeignKey("ScumServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScumServer");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ScumServer", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Ftp", "Ftp")
                        .WithMany()
                        .HasForeignKey("FtpId");

                    b.HasOne("RagnarokBotWeb.Domain.Entities.Guild", "Guild")
                        .WithOne("ScumServer")
                        .HasForeignKey("RagnarokBotWeb.Domain.Entities.ScumServer", "GuildId");

                    b.HasOne("RagnarokBotWeb.Domain.Entities.Tenant", "Tenant")
                        .WithMany("ScumServers")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ftp");

                    b.Navigation("Guild");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.User", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Channel", b =>
                {
                    b.Navigation("Buttons");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.ChannelTemplate", b =>
                {
                    b.Navigation("Buttons");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Guild", b =>
                {
                    b.Navigation("ScumServer")
                        .IsRequired();
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Pack", b =>
                {
                    b.Navigation("PackItems");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Tenant", b =>
                {
                    b.Navigation("ScumServers");
                });
#pragma warning restore 612, 618
        }
    }
}
