// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RagnarokBotWeb.Infrastructure.Configuration;

#nullable disable

namespace RagnarokBotWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Bot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastInteracted")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Bunker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Available")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bunkers");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Kill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Distance")
                        .HasColumnType("REAL");

                    b.Property<long?>("KillerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KillerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("KillerSteamId64")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sector")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TargetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetSteamId64")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weapon")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KillerId");

                    b.HasIndex("TargetId");

                    b.ToTable("Kills");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Lockpick", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AttemptDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Attempts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LockType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ScumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SteamId64")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lockpicks");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PackId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PackId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Pack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VipPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Packs");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.PackItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PackId");

                    b.ToTable("PackItems");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Reader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Coin")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscordId")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Fame")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScumId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SteamId64")
                        .HasColumnType("TEXT");

                    b.Property<string>("SteamName")
                        .HasColumnType("TEXT");

                    b.Property<float?>("X")
                        .HasColumnType("REAL");

                    b.Property<float?>("Y")
                        .HasColumnType("REAL");

                    b.Property<float?>("Z")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Kill", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.User", "Killer")
                        .WithMany()
                        .HasForeignKey("KillerId");

                    b.HasOne("RagnarokBotWeb.Domain.Entities.User", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId");

                    b.Navigation("Killer");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Lockpick", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Order", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Pack", "Pack")
                        .WithMany()
                        .HasForeignKey("PackId");

                    b.HasOne("RagnarokBotWeb.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Pack");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.PackItem", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RagnarokBotWeb.Domain.Entities.Pack", "Pack")
                        .WithMany("PackItems")
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Pack");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("RagnarokBotWeb.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RagnarokBotWeb.Domain.Entities.Pack", b =>
                {
                    b.Navigation("PackItems");
                });
#pragma warning restore 612, 618
        }
    }
}
